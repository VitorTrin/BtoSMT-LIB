1- Lista de critérios a serem avaliados

    Teorias Suportadas- O solver tem de ser capaz de lidar com todas as teorias envolvidas no teste. Uma teoria em especial e muito relevante é a teoria de conjuntos

    Documentação- Quanto melhor a documentação, mais fácil a interação com o solver

    Licença- A licença precisa permitir esse tipo de uso

    Em desenvolvimento- Aplicações em desenvolvimento são capazes de melhorar

    Retorna casos que satisfazem- Ponto principal para o nosso uso. Sem o retorno dos casos que satisfazem, sem utilidade


2- Ferramentas a serem analisadas

    CVC4-  http://cvc4.cs.stanford.edu/

    Z3- https://github.com/Z3Prover/z3

    Alt-Ergo- http://alt-ergo.lri.fr/

    {log}- http://people.dmi.unipr.it/gianfranco.rossi/setlog.Home.html

3- Avaliação dos solvers


    Nome: CVC4

    Site: http://cvc4.cs.stanford.edu/

    Teorias Suportadas: Equality over free (aka uninterpreted) function and predicate symbols, real and integer linear arithmetic, bit-vectors, arrays, tuples, records, user-defined inductive datatypes, strings, finite sets, separation logic.
    Não suporta Sets completamente, por exemplo última versão estável (1.4) não suporta univset.

    Documentação: Boa para API, necessário o uso da documentação do CVC3 na linguagem própria, terceriza parte da documentação SMT-LIB

    Licença: CVC4 é All rights reserved, o código fonte é BSD

    Em desenvolvimento: sim, múltiplos commits diários

    Retorna casos que satisfazem: sim.

    Usado por: Rodin

    Outro: ainda em cvc3, o solver que conseguiu provar mais obrigações de prova em comparação com z3 e alt-ergo

--------------------------------------------------------------------------------------------------------------------------------------------------------

    Nome: {log}

    Site: http://people.dmi.unipr.it/gianfranco.rossi/setlog.Home.html

    Teorias Suportadas: Sets (Muito poderoso nisso, segundo a documentação), Integers

    Documentação: Possui exemplos, manual em http://people.dmi.unipr.it/gianfranco.rossi/SETLOG/manual_4_9_1.pdf

    Em desemvolvimento: último update 01/17 no beta, último estável 04/2016

    Retorna casos que satisfazem: Sem informação por enquanto

------------------------------------------------------------------------------------------------------------------------------------------------------

    Nome: Z3

    Site: https://github.com/Z3Prover/z3

    Teorias Suportadas: uninterpreted funcitions, arrays, bitvectors, bitvectors arrays, reals, ints, difference logic over integers, nonlinear, quantifiers. Em Descriptores SMT: AUFLIA, AUFLIRA, AUFNIRA, LRA, QF_ABV, QF_AUFBV, QF_UFBV, QF_AUFLIA, QF_AX, QF_BV, QF_IDL, QF_RDL, QF_LIA, QF_LRA, QF_NIA, QF_NRA, QF_UF, QF_UFID, QF_UFLIA, QF_UFLRA, QF_UFNRA, UFLRA, UFNIA, UFBV, QF_S, QF_FD. Não suporta sets.

    Licença: MIT

    Documentação: https://github.com/Z3Prover/z3/wiki#background

    Em desenvolvimento: múltiplos commits diários, última versão estável lançada em 7/11/2016

    Retorna casos que satisfazem: Sim, supporta get-value

    Usado por: Rodin

--------------------------------------------------------------------------------------------------------------------------------------------------------

    Nome: Alt-Ergo

    Site: http://alt-ergo.lri.fr/

    Teorias Suportadas: the free theory of equality with uninterpreted symbols, linear arithmetic over integers and rationals, non-linear arithmetic, polymorphic functional arrays, enumerated datatypes, record datatypes, associative and commutative (AC) symbols, fixed-size bit-vectors.

    Licença: CeCILL-C

    Documentação: https://github.com/OcamlPro/alt-ergo/blob/master/INSTALL.md, muito voltada para instalação e funcionamento interno

    Em desenvolvimento: Última release estável 21/2016, sem commits desde então

    Retorna casos que satisfazem: (não testado)

    Usado por: Atelier-B, Rodin
